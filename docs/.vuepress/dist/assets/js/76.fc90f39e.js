(window.webpackJsonp=window.webpackJsonp||[]).push([[76],{401:function(t,s,a){"use strict";a.r(s);var r=a(4),e=Object(r.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"_1-1-typescript概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-typescript概述"}},[t._v("#")]),t._v(" 1.1 TypeScript概述")]),t._v(" "),s("ul",[s("li",[t._v("官网描述：TypeScript就是添加了类型系统的 JavaScript")]),t._v(" "),s("li",[t._v("TypeScript是一种由微软开源的编程语言。它是 JavaScript 的一个超集，而且本质上向这个语言添加了可选的静态类型和基于类的面向对象编程。")]),t._v(" "),s("li",[t._v("TypeScript 扩展了 JavaScript 的句法，所以任何现有的 JavaScript 程序可以不加改变的在 TypeScript 下工作。TypeScript 是为大型应用之开发而设计，而编译时它产生 JavaScript 以确保兼容性。")])]),t._v(" "),s("h2",{attrs:{id:"_1-2-typescript特性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-typescript特性"}},[t._v("#")]),t._v(" 1.2 TypeScript特性")]),t._v(" "),s("ol",[s("li",[s("strong",[t._v("TypeScript 是静态类型")]),t._v("：JavaScript 是一门解释型语言，没有编译阶段，所以它是动态类型；静态类型是指编译阶段就能确定每个变量的类型，这种语言的类型错误往往会导致语法错误，在编译阶段就会进行类型检查")]),t._v(" "),s("li",[s("strong",[t._v("TypeScript 是弱类型")]),t._v("：类型系统按照「是否允许隐式类型转换」来分类，可以分为强类型和弱类型；TypeScript 是完全兼容 JavaScript 的，它不会修改 JavaScript 运行时的特性，所以"),s("strong",[t._v("它们都是弱类型")]),t._v("。")]),t._v(" "),s("li",[s("strong",[t._v("TypeScript 的核心设计理念")]),t._v("：在完整保留 JavaScript 运行时行为的基础上，通过引入静态类型系统来提高代码的可维护性，减少可能出现的 bug。")])]),t._v(" "),s("h2",{attrs:{id:"_1-3-typescript安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-typescript安装"}},[t._v("#")]),t._v(" 1.3 Typescript安装")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("安装TypesScript：以下命令会在全局环境下安装 "),s("code",[t._v("tsc")]),t._v(" 命令，安装完成之后，我们就可以在任何地方执行 "),s("code",[t._v("tsc")]),t._v(" 命令了。")]),t._v(" "),s("div",{staticClass:"language-shell line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# npm")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-g")]),t._v(" typescript \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# yarn")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" global "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" typescript\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果没有安装yarn,先安装yarn")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-g")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])])]),t._v(" "),s("li",[s("p",[t._v("编写TypeScript文件：是以ts结尾的文本文件，并使用"),s("code",[t._v("tsc")]),t._v("命令编译ts文件，编译成功会生对应的js文件")]),t._v(" "),s("div",{staticClass:"language-shell line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("tsc xxx.ts\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])])])])])}),[],!1,null,null,null);s.default=e.exports}}]);